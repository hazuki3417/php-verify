name: Testing

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  provision:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@main

    - name: verify composer.json and composer.lock
      run: composer validate

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Composer cache or restore
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

  testing:
    runs-on: ubuntu-latest
    needs: provision

    steps:
    - name: Checkout repository
      uses: actions/checkout@main

    - name: Composer cache or restore
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-
          
    - name: Test
      run: make test

  generate-coverage:
    runs-on: ubuntu-latest
    needs: testing

    steps:
    - name: Checkout repository
      uses: actions/checkout@main

    - name: Composer cache or restore
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Generate api document
      run: make generate-coverage

    - name: upload artifact documents
      uses: actions/upload-artifact@v2
      with:
        name: documents
        path: docs

  send-report:
    runs-on: ubuntu-latest
    needs: generate-coverage

    steps:
    - name: Checkout repository
      uses: actions/checkout@main

    - name: download artifact documents
      uses: actions/download-artifact@v2
      with:
        name: documents
        path: docs

    - name: Install code climate reporter
      run: |
        curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 -o ./cc-test-reporter
        chmod +x ./cc-test-reporter

    - name: Post code climate reporter
      env:
        CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}
      run: |
        ./cc-test-reporter format-coverage ./docs/coverage/clover.xml --input-type clover
        ./cc-test-reporter upload-coverage -r $CC_TEST_REPORTER_ID

  upload-coverage:
    runs-on: ubuntu-latest
    needs: generate-coverage

    steps:
    - name: Checkout repository
      uses: actions/checkout@main

    - name: download artifact documents
      uses: actions/download-artifact@v2
      with:
        name: documents
        path: docs

    # [Reference]
    # https://github.com/aws-actions/configure-aws-credentials
    - name: Configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{secrets.AWS_CLI_ACCESS_KEY}}
        aws-secret-access-key: ${{secrets.AWS_CLI_SECRET_ACCESS_KEY}}
        aws-region: ap-northeast-1

    - name: Upload coverage files
      env:
        S3_BUCKET_NAME: ${{secrets.AWS_S3_BUCKET_NAME}}
      run: |
        aws s3 sync ./docs/coverage s3://$S3_BUCKET_NAME/coverage

  # TODO: パッケージ側のバグで生成できないため、一旦コメントアウト
  # generate-api-document:
  #   runs-on: ubuntu-latest
  #   needs: testing

  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@main

  #   - name: Composer cache or restore
  #     id: composer-cache
  #     uses: actions/cache@v2
  #     with:
  #       path: vendor
  #       key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
  #       restore-keys: |
  #         ${{ runner.os }}-composer-

  #   - name: Generate api document
  #     run: php ./vendor/bin/phpdoc

  #   - name: upload artifact documents
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: documents
  #       path: docs

  # TODO: 設定後、追加
  # upload-api-document:
  #   runs-on: ubuntu-latest
  #   needs: generate-api-document

  #   # [Reference]
  #   # https://github.com/aws-actions/configure-aws-credentials
  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@main

  #   - name: download artifact documents
  #     uses: actions/download-artifact@v2
  #     with:
  #       name: documents
  #       path: docs

  #   - name: Configure aws credentials
  #     uses: aws-actions/configure-aws-credentials@v1
  #     with:
  #       aws-access-key-id: ${{secrets.AWS_CLI_ACCESS_KEY}}
  #       aws-secret-access-key: ${{secrets.AWS_CLI_SECRET_ACCESS_KEY}}
  #       aws-region: ap-northeast-1

  #   - name: Upload api document
  #     env:
  #       S3_BUCKET_NAME: ${{secrets.AWS_S3_BUCKET_NAME}}
  #     run: |
  #       aws s3 sync ./docs/phpdoc s3://$S3_BUCKET_NAME/phpdoc
